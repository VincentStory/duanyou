// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5' // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }

//            maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}

        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }

    }
}


subprojects {
    afterEvaluate { Project project ->
        ext.pluginContainer = project.getPlugins()
        def hasAppPlugin = ext.pluginContainer.hasPlugin("com.android.application")
        def hasLibPlugin = ext.pluginContainer.hasPlugin("com.android.library")
        if (hasAppPlugin || hasLibPlugin) {
            android {
                compileSdkVersion 26 as int
                buildToolsVersion '27.0.3'
//                aaptOptions {
//                    cruncherEnabled = false
//                    useNewCruncher = false
//                }


                buildTypes {
                    release {
                        debuggable false
                        minifyEnabled false //实时构建库项目时若启用混淆，APP模块引用会造成部分方法找不到
                    }
                    debug {
                        debuggable true
                        minifyEnabled false
                    }
                }
//                aaptOptions{
//                    cruncherEnabled false
//                    useNewCruncher false
//                }
                lintOptions {
                    abortOnError false
                }

                packagingOptions {
                    exclude 'META-INF/DEPENDENCIES.txt'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/notice.txt'
                    exclude 'META-INF/license.txt'
                    exclude 'META-INF/dependencies.txt'
                    exclude 'META-INF/LGPL2.1'
                    exclude 'META-INF/ASL2.0'
                }

            }

        }


    }

}


task clean(type: Delete) {
    delete rootProject.buildDir
}
